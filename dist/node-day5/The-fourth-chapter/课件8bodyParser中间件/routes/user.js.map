{"version":3,"sources":["../../../../../node-day5/The-fourth-chapter/课件8bodyParser中间件/routes/user.js"],"names":["express","require","path","router","Router","get","req","res","send","sendFile","join","__dirname","post","console","log","body","headers","module","exports"],"mappings":";;AAAA,IAAIA,UAAUC,QAAQ,SAAR,CAAd;AACA,IAAIC,OAAOD,QAAQ,MAAR,CAAX;AACA,IAAIE,SAASH,QAAQI,MAAR,EAAb;AACA;AACAD,OAAOE,GAAP,CAAW,QAAX,EAAoB,UAAUC,GAAV,EAAcC,GAAd,EAAmB;AACpCA,QAAIC,IAAJ,CAAS,IAAT;AACF,CAFD;;AAIA;AACAL,OAAOE,GAAP,CAAW,MAAX,EAAkB,UAAUC,GAAV,EAAcC,GAAd,EAAmB;AACjCA,QAAIE,QAAJ,CAAaP,KAAKQ,IAAL,CAAUC,SAAV,EAAoB,mBAApB,CAAb;AACA;AACH,CAHD;;AAKA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAR,OAAOS,IAAP,CAAY,MAAZ,EAAmB,UAAUN,GAAV,EAAcC,GAAd,EAAmB;AAClCM,YAAQC,GAAR,CAAYR,IAAIS,IAAhB,EADkC,CACZ;AACtBF,YAAQC,GAAR,CAAYR,IAAIU,OAAJ,CAAY,cAAZ,CAAZ,EAFkC,CAEM;AAE3C,CAJD;;AAMAb,OAAOS,IAAP,CAAY,QAAZ,EAAqB,UAAUN,GAAV,EAAcC,GAAd,EAAmB,CAEvC,CAFD;;AAIAU,OAAOC,OAAP,GAAiBf,MAAjB","file":"user.js","sourcesContent":["let express = require('express')\nlet path = require('path')\nlet router = express.Router()\n//router也是一个函数\nrouter.get('/login',function (req,res) {\n   res.send('登陆')\n})\n\n//path.resolve 是根据运行的文件的位置来解析的 所以此时不能用resolve 而join拼接出来的是聚堆路径\nrouter.get('/reg',function (req,res) {\n    res.sendFile(path.join(__dirname,'../views/reg.html'))\n    // res.sendFile(path.resolve('../views/reg.html')// ENOENT: no such file or directory, stat '/Users/zichunli/Desktop/201710node/node-day5/The-fourth-chapter/views/reg.html'\n})\n\n//登录的时候也可能会有相同的数据处理 所以第一反应是抽出去  如果所有的都有这种处理 就把这种处理方法写在外面\n\n// router.post('/reg',function (req,res) {\n//     let str = ''\n//     req.on('data',function (chunk) {\n//         str+=chunk\n//     })\n//     req.on('end',function () {\n//         console.log(str)  //username=44&password=ttt\n//         //变成对象\n//         //方法1:这种方法不是很好\n//        /* let obj ={}\n//         str.replace(/([^&=]+)=([^&=]+)/g,function () {\n//             obj[arguments[1]] = arguments[2]\n//         });\n//         console.log(obj)//{ username: 'ttt', password: '7777' }*/\n//        //方法2 node的自带的模块\n//         console.log(require('querystring').parse(str));//node自带的模块 { username: '555', password: '6666' }\n//     })\n// })\n\nrouter.post('/reg',function (req,res) {\n    console.log(req.body);//{ username: 'rrrr', password: 'egg' }\n    console.log(req.headers['content-type'])//application/x-www-form-urlencoded 表单格式\n\n})\n\nrouter.post('/login',function (req,res) {\n\n})\n\nmodule.exports = router"]}