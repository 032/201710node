{"version":3,"sources":["../../../../node-day5/The-fourth-chapter/课件6中间件装饰模式/7.middleWare.js"],"names":["express","require","app","listen","use","req","res","next","console","log","stone","header","sand","end","get","err"],"mappings":";;AAAA;AACA,IAAIA,UAAUC,QAAQ,SAAR,CAAd;AACA,IAAIC,MAAMF,SAAV;AACAE,IAAIC,MAAJ,CAAW,IAAX;AACA;AACA;AACA;AACA;AACA;AACAD,IAAIE,GAAJ,CAAQ,QAAR,EAAiB,UAAUC,GAAV,EAAcC,GAAd,EAAkBC,IAAlB,EAAwB;AAAC;AACtCC,YAAQC,GAAR,CAAY,MAAZ,EADqC,CAClB;AACnB;AACAJ,QAAIK,KAAJ,GAAW,SAAX;AACAH,SAAK,mBAAL,EAJqC,CAIZ;AAC5B,CALD;;AAOAL,IAAIE,GAAJ,CAAQ,UAAUC,GAAV,EAAcC,GAAd,EAAkBC,IAAlB,EAAwB;AAAC;AAC7BD,QAAIK,MAAJ,CAAW,cAAX,EAA0B,yBAA1B;AACAJ;AACH,CAHD;AAIAL,IAAIE,GAAJ,CAAQ,UAAR,EAAmB,UAAUC,GAAV,EAAcC,GAAd,EAAkBC,IAAlB,EAAwB;AACvCC,YAAQC,GAAR,CAAY,MAAZ,EADuC,CACpB;AACnBJ,QAAIO,IAAJ,GAAS,OAAT;AACAN,QAAIO,GAAJ,CAAQ,GAAR;AACAN;AACH,CALD;AAMAL,IAAIY,GAAJ,CAAQ,QAAR,EAAiB,UAAUT,GAAV,EAAcC,GAAd,EAAmB;AACpCE,YAAQC,GAAR,CAAYJ,IAAIK,KAAhB,EAAsBL,IAAIO,IAA1B,EADoC,CACL;AAC3BN,QAAIO,GAAJ,CAAQ,OAAR;AACH,CAHD;AAIAX,IAAIY,GAAJ,CAAQ,OAAR,EAAgB,UAAUT,GAAV,EAAcC,GAAd,EAAmB;AAC/BE,YAAQC,GAAR,CAAYJ,IAAIK,KAAhB,EAAsBL,IAAIO,IAA1B,EAD+B,CACA;AAC/BN,QAAIO,GAAJ,CAAQ,IAAR;AACH,CAHD;AAIA;AACAX,IAAIE,GAAJ,CAAQ,UAAUW,GAAV,EAAcV,GAAd,EAAkBC,GAAlB,EAAsBC,IAAtB,EAA4B;AAChCC,YAAQC,GAAR,CAAYM,GAAZ,EADgC,CACf;AACpB,CAFD","file":"7.middleWare.js","sourcesContent":["//中间件  当我们访问到最终目标之前执行的内容\nlet express = require('express')\nlet app = express()\napp.listen(8080)\n//use是中间件\n//1.中间件的第一个功能：可以进行权限判断\n//2.可以对req和res的属性进行扩充\n//3.中间件要放在执行路径的上面\n//4.中间件默认情况下都匹配，可以指定匹配什么开头的，第一个参数默认为'/'\napp.use('/water',function (req,res,next) {//不调用next就不继续向下走\n    console.log('过滤石头')//过滤石头\n    // res.end('too big')\n    req.stone ='too big'\n    next('error  middleware')//next的参数都是错误，它会传给错误中间件，错误中间件永远放在最底下，如果有错误会直接跳到错误中间件\n})\n\napp.use(function (req,res,next) {//不调用next就不继续向下走')\n    res.header('Content-Type','text/plain;charset=utf8')\n    next()\n})\napp.use('/water/a',function (req,res,next) {\n    console.log('过滤沙子')//过滤沙子\n    req.sand='small'\n    res.end('水')\n    next()\n})\napp.get('/water',function (req,res) {\nconsole.log(req.stone,req.sand)//too big small\n    res.end('water')\n})\napp.get('/food',function (req,res) {\n    console.log(req.stone,req.sand)//too big small\n    res.end('食物')\n})\n//错误中间件拥有的哥参数 第一个是error  还有其他三个 所以有四个参数\napp.use(function (err,req,res,next) {\n    console.log(err) //error  middleware\n})\n"]}